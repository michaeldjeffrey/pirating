package  {		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.display.DisplayObject;	import flash.display.DisplayObjectContainer;	import flash.display.Shape;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;		public class Main extends MovieClip {				//set singleton		private static var _instance:Main;		public static function get instance():Main{return _instance;}				//initialize variables		public var govA:GovAgent;		public var fish:Fish;		public var govAgentArray:Array = new Array();		public var fishArray:Array = new Array();		public var selectedFish:DisplayObject;		public var fishingLine:Shape;		public var fishCaught:Boolean = false;		public var scoreText:TextField;		public var score:int = 0;						public function Main() {			_instance = this;						var myFormat:TextFormat = new TextFormat();  			myFormat.size = 24;  						scoreText = new TextField();			scoreText.autoSize = TextFieldAutoSize.LEFT;			scoreText.y = 40;			scoreText.x = 20;			scoreText.text = score.toString();			scoreText.setTextFormat(myFormat);			addChild(scoreText);						for(var i:int = 0; i < 3; i++){				fish = new Fish();				fish.gotoAndStop(i + 1);				addChild(fish);				fishArray.push(fish)			}						this.addEventListener("enterFrame", onEnterFrame);		}				public function onEnterFrame(event:Event){			if(fishCaught == true){				for(var bg:int = 0; bg < govAgentArray.length; bg++){					if(fishingLine.hitTestObject(govAgentArray[bg])){						gotoAndStop(5);						gameOver();					} else if(selectedFish.hitTestObject(boat)){						gotoAndStop(6);						gameOver();					}				}			}			var fishlineX = boat.boat_inside.x+312;			var fishlineY = (boat.boat_inside.y)*-1;			if(fishCaught == true){				if(Math.random() < 0.05 && govAgentArray.length < 8){					if(Math.random() < 0.5){						govA = new GovAgent(1);						addChild(govA);						} else {							govA = new GovAgent(-1);							addChild(govA);						}					govAgentArray.push(govA);				}			}			if(this.getChildByName("fishingLine")){				fishingLine.graphics.clear();				fishingLine.graphics.lineStyle(1, 0x000000, 1);				fishingLine.graphics.moveTo(fishlineX, fishlineY);				fishingLine.graphics.curveTo((fishlineX+selectedFish.x)/2+20, (fishlineY+selectedFish.y)/2+20, selectedFish.x, selectedFish.y);			} 		}		public function fireLine(o:DisplayObject){			fishCaught = true;			if(!this.getChildByName("fishingLine")){				fishingLine = new Shape();				fishingLine.graphics.lineStyle(1, 0x000000, 1);				fishingLine.graphics.moveTo((boat.x)+560, boat.y+150);				fishingLine.graphics.curveTo((boat.x+o.x), (boat.y+o.y), o.x, o.y);				fishingLine.name = 'fishingLine';				addChild(fishingLine);				selectedFish = o;			}		}		public function gameOver(){			this.removeChild(fishingLine);			fishCaught = false;			for(var ka:int = 0; ka < govAgentArray.length; ka++){				this.removeChild(govAgentArray[ka]);			}			for(var kf:int = 0; kf < fishArray.length; kf++){				this.removeChild(fishArray[kf]);			}		}	}}